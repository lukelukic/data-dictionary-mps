package DataDictionaryDsl.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.AbstractIntentionDescriptor;
import jetbrains.mps.openapi.intentions.IntentionFactory;
import java.util.Collection;
import jetbrains.mps.openapi.intentions.IntentionExecutable;
import jetbrains.mps.openapi.intentions.Kind;
import jetbrains.mps.smodel.SNodePointer;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import java.util.Collections;
import jetbrains.mps.intentions.AbstractIntentionExecutable;
import DataDictionaryDsl.behavior.Field__BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.openapi.intentions.IntentionDescriptor;

public final class addDefaultDomainToField_Intention extends AbstractIntentionDescriptor implements IntentionFactory {
  private Collection<IntentionExecutable> myCachedExecutable;
  public addDefaultDomainToField_Intention() {
    super(Kind.NORMAL, false, new SNodePointer("r:63b0ecf0-7199-4b6c-8d45-042faac3a1dd(DataDictionaryDsl.intentions)", "1632752802686989552"));
  }
  @Override
  public String getPresentation() {
    return "addDefaultDomainToField";
  }
  @Override
  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    return true;
  }
  @Override
  public boolean isSurroundWith() {
    return false;
  }
  public Collection<IntentionExecutable> instances(final SNode node, final EditorContext context) {
    if (myCachedExecutable == null) {
      myCachedExecutable = Collections.<IntentionExecutable>singletonList(new addDefaultDomainToField_Intention.IntentionImplementation());
    }
    return myCachedExecutable;
  }
  /*package*/ final class IntentionImplementation extends AbstractIntentionExecutable {
    public IntentionImplementation() {
    }
    @Override
    public String getDescription(final SNode node, final EditorContext editorContext) {
      return "Add Default Domain";
    }
    @Override
    public void execute(final SNode node, final EditorContext editorContext) {
      if (!((boolean) Field__BehaviorDescriptor.hasLinkedDomain_id1qCH0nU6qJW.invoke(node))) {
        SNode domain;
        SNode charDomain = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x1c08e9be3db505a7L, "DataDictionaryDsl.structure.Char"));
        SPropertyOperations.assign(charDomain, MetaAdapterFactory.getProperty(0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x1c08e9be3db505a7L, 0x1c08e9be3db505a8L, "length"), 10);
        domain = charDomain;
        SNode sd = Field__BehaviorDescriptor.getStructureDefinition_id1qCH0nU6qR5.invoke(node);
        SNode newFieldDefinition = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x1c08e9be3d6d982aL, "DataDictionaryDsl.structure.FieldDefinition"));
        SLinkOperations.setTarget(newFieldDefinition, MetaAdapterFactory.getContainmentLink(0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x1c08e9be3d6d982aL, 0x1c08e9be3d6d982bL, "domain"), domain);
        SLinkOperations.setTarget(newFieldDefinition, MetaAdapterFactory.getReferenceLink(0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x1c08e9be3d6d982aL, 0x1c08e9be3d6d982dL, "field"), node);
        ListSequence.fromList(SLinkOperations.getChildren(sd, MetaAdapterFactory.getContainmentLink(0x16d63821a9174aafL, 0xa85f305cd4a0013fL, 0x73ede05be9bfff46L, 0x1c08e9be3d6f6444L, "fieldDefinitions"))).addElement(newFieldDefinition);
      }
    }
    @Override
    public IntentionDescriptor getDescriptor() {
      return addDefaultDomainToField_Intention.this;
    }
  }
}
